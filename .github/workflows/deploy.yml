name: Build and Deploy

on:
  workflow_dispatch: {}

env:
  applicationfolder: spring-boot-hello-world-example
  AWS_REGION: us-west-2
  S3BUCKET: bookclub-webappdeploymentbucket-62owwsxz1sfa 


jobs:
  react-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set Up Node for Frontend
      uses: actions/setup-node@v3
      with:
        node-version: lts/*
    - run: npm ci
      working-directory: ./frontend
    - run: npm run build --if-present
      working-directory: ./frontend
    # - run: npm test
    #   working-directory: ./frontend

  django-tests:
    runs-on: ubuntu-latest 
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11' 
      - run: pip install -r requirements.txt 
        working-directory: ./backend
      - run: python manage.py test
        working-directory: ./backend

  run-compose:
    needs: [react-tests, django-tests]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Start containers
      run: ./run-compose-dev-ci.sh
    - name: Stop containers
      if: always()
      run: docker-compose -f docker-compose.dev.yml down
      
  # deploy:
  #   needs: run-compose
  #   runs-on: ubuntu-latest
  #   environment: Dev
  #   permissions:
  #     id-token: write
  #     contents: read
  #   steps:
  #   - uses: actions/checkout@v2
  #   - uses: aws-actions/configure-aws-credentials@v1
  #     with:
  #       role-to-assume: ${{ secrets.IAMROLE_GITHUB }}
  #       role-session-name: GitHub-Action-Role
  #       aws-region: ${{ env.AWS_REGION }}
  #   - run:
  #       echo "Deploying branch ${{ env.GITHUB_REF }} to ${{ github.event.inputs.environment }}"
  #       commit_hash=`git rev-parse HEAD`
  #       aws deploy create-deployment --application-name CodeDeployAppNameWithASG --deployment-group-name CodeDeployGroupName --github-location repository=$GITHUB_REPOSITORY,commitId=$commit_hash --ignore-application-stop-failures
